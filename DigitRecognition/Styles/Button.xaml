<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:prop="clr-namespace:DigitRecognition.AttachedProperties"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:DigitRecognition.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Fonts.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Text.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type Button}" x:Key="TitleBarBase">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Padding" Value="8"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"></ScaleTransform>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Padding="{TemplateBinding Padding}" 
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            Foreground="{StaticResource TextColorBrush}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondHoverColorBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CloseButton" BasedOn="{StaticResource TitleBarBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonLineBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="IconButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        BorderThickness="0"
                        Background="Transparent"
                        Padding="5 5 5 1">
                        <StackPanel>
                            <Image Source="/Images/icon.png"></Image>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChangeSiteButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Name="buttonBorder"
                        Background="{StaticResource GoldenrodYellowColorBrush}"
                        CornerRadius="5"
                        Margin="5 5 5 0"
                        Padding="10"
                        Width="130">
                        <StackPanel>
                            <TextBlock
                                Name="buttonText"
                                Foreground="{StaticResource TitleBarBrush}"
                                FontSize="16px"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource LightYellowColorBrush}"></Setter>
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(prop:IsSiteProperty.IsSiteChoosen)}" Value="true">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{StaticResource RufousColorBrush}"></Setter>
                            <Setter TargetName="buttonText" Property="Foreground" Value="White"></Setter>
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LearningButtons" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Name="borderArea"
                        Width="200"
                        Padding="10"
                        CornerRadius="5"
                        Margin="5"
                        Background="{StaticResource GoldenrodYellowColorBrush}">
                        <Grid>
                            <TextBlock
                            FontSize="16px"
                            HorizontalAlignment="Center"
                            Visibility="{TemplateBinding prop:ActionRunning.ActionIsRunning, Converter={convert:BooleanToVisibility}}"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}">
                            </TextBlock>
                            <TextBlock
                                    Style="{StaticResource RotateTextBlock}"
                                    Visibility="{TemplateBinding prop:ActionRunning.ActionIsRunning, Converter={convert:BooleanToVisibility},ConverterParameter=true}">
                                    <ContentPresenter></ContentPresenter>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderArea" Property="Background" Value="{StaticResource RufousColorBrush}"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>

                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="borderArea" Property="Background" Value="{StaticResource LightYellowColorBrush}"></Setter>
                            <Setter Property="Foreground" Value="Black"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>